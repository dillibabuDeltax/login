<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <FaultRules>
    </FaultRules>
    <PreFlow>
       
    </PreFlow>
    <Flows>
    	
	    	<Flow name="User Basic Authentication">
	    		<Description>User Basic Authentication</Description> 
	    		<Request> 
			    </Request> 
			    <Condition>(request.path Matches "/apis/login/v1/security/authentication") and (request.verb = "POST")</Condition> 
				<Response/>
			</Flow>
	    	<Flow name="Get User Profile">
	    		<Description>Get User Profile</Description> 
	    		<Request>
			      <Step> 
			        <Name>RF.mandatory-check-query-params</Name>  
			        <Condition>((request.queryparam.lookupType is null) or (request.queryparam.lookupValue is null))</Condition> 
			      </Step>
			    </Request> 
			    <Condition>(request.path Matches "/apis/login/v1/security/userprofile") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="Get User Phone Numbers">
	    		<Description>Get User Phone Numbers</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/apis/login/v1/security/accounts/{loginName}/phonenumbers") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="MFA Enroll">
	    		<Description>MFA Enroll</Description> 
	    		<Request> 
			    </Request> 
			    <Condition>(request.path Matches "/apis/login/v1/security/mfa-enroll") and (request.verb = "POST")</Condition> 
				<Response/>
			</Flow>
	    	<Flow name="MFA Deliver">
	    		<Description>MFA Deliver</Description> 
	    		<Request> 
			    </Request> 
			    <Condition>(request.path Matches "/apis/login/v1/security/mfa-deliver") and (request.verb = "POST")</Condition> 
				<Response/>
			</Flow>
	    	<Flow name="MFA Authentication">
	    		<Description>MFA Authentication</Description> 
	    		<Request> 
			    </Request> 
			    <Condition>(request.path Matches "/apis/login/v1/security/mfa-authentication") and (request.verb = "POST")</Condition> 
				<Response/>
			</Flow>
	    	<Flow name="Forgot Password">
	    		<Description>Forgot Password</Description> 
	    		<Request> 
			    </Request> 
			    <Condition>(request.path Matches "/apis/login/v1/security/forgot-password") and (request.verb = "POST")</Condition> 
				<Response/>
			</Flow>
	    	<Flow name="Change Password">
	    		<Description>Change Password</Description> 
	    		<Request> 
			    </Request> 
			    <Condition>(request.path Matches "/apis/login/v1/security/change-password") and (request.verb = "POST")</Condition> 
				<Response/>
			</Flow>
	    	<Flow name="Logout">
	    		<Description>Logout</Description> 
	    		<Request> 
			    </Request> 
			    <Condition>(request.path Matches "/apis/login/v1/security/logout") and (request.verb = "POST")</Condition> 
				<Response/>
			</Flow>
	   
    </Flows>
    <PostFlow>
    </PostFlow>
    <RouteRule name="NoRoute">
        <Condition>request.verb == "OPTIONS"</Condition>
    </RouteRule>
    <!-- This node will be dynamically generated by the proxy-gen tool. It covers BasePath and VirtualHost entries -->
    <RouteRule name="microservice-apicl">
    	<TargetEndpoint>microservice-apicl</TargetEndpoint>
        <Condition>(request.header.x-mock != "y") AND (request.header.x-mock != "Y") AND ((proxy.pathsuffix MatchesPath "/authentication") OR (proxy.pathsuffix MatchesPath "/mfa-enroll") OR (proxy.pathsuffix MatchesPath "/mfa-deliver") OR (proxy.pathsuffix MatchesPath "/mfa-authentication") OR (proxy.pathsuffix MatchesPath "/forgot-password") OR (proxy.pathsuffix MatchesPath "/change-password") OR (proxy.pathsuffix MatchesPath "/logout") OR (proxy.pathsuffix MatchesPath "/userprofile") OR (proxy.pathsuffix MatchesPath "/accounts/**/phonenumbers") )</Condition>
    </RouteRule>
    <HTTPProxyConnection>        
    	<BasePath>/apis/login/v1/security</BasePath>
		<VirtualHost>tpoapi</VirtualHost>
    </HTTPProxyConnection>
</ProxyEndpoint>